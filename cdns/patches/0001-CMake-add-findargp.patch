--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -14,7 +14,8 @@ endmacro(use_c99)
 project (cdns C)
 use_c99 ()
 include(CTest)
- 
+set(CMAKE_MODULE_PATH "${PROJECT_SOURCE_DIR}" ${CMAKE_MODULE_PATH})
+find_package(argp)
 # The version number.
 set (cdns_VERSION_MAJOR 1)
 set (cdns_VERSION_MINOR 0)
@@ -33,10 +34,10 @@ configure_file (
  
 # add the binary tree to the search path for include files
 # so that we will find cdnsConfig.h
-include_directories ("${PROJECT_BINARY_DIR}")
+include_directories ("${PROJECT_BINARY_DIR}" "${ARGP_INCLUDE_PATH}")
  
 set(CMAKE_REQUIRED_LIBRARIES ${CMAKE_REQUIRED_LIBRARIES} event m)
-set (EXTRA_LIBS ${EXTRA_LIBS} ${CMAKE_REQUIRED_LIBRARIES})
+set (EXTRA_LIBS ${EXTRA_LIBS} ${CMAKE_REQUIRED_LIBRARIES} ${ARGP_LIBRARIES})
 # add the executable
 add_executable (cdns  main.c log.c json.c cfg.c cdns.c dns.c blacklist.c)
 target_link_libraries (cdns  ${EXTRA_LIBS})
--- /dev/null
+++ b/Findargp.cmake
@@ -0,0 +1,76 @@
+# This file is part of CMake-argp.
+#
+# CMake-argp is free software: you can redistribute it and/or modify it under
+# the terms of the GNU Lesser General Public License as published by the Free
+# Software Foundation, either version 3 of the License, or (at your option) any
+# later version.
+#
+# This program is distributed in the hope that it will be useful, but WITHOUT
+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
+# FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
+#
+# You should have received a copy of the GNU Lesser General Public License along
+# with this program. If not, see
+#
+#  http://www.gnu.org/licenses/
+#
+#
+# Copyright (c)
+#   2016-2017 Alexander Haase <ahaase@alexhaase.de>
+#
+
+include(FindPackageHandleStandardArgs)
+include(CheckFunctionExists)
+
+
+# Do the following checks for header, library and argp functions quietly. Only
+# print the result at the end of this file.
+set(CMAKE_REQUIRED_QUIET TRUE)
+
+
+# First search the argp header file. If it is not found, any further steps will
+# fail.
+find_path(ARGP_INCLUDE_PATH "argp.h")
+if (ARGP_INCLUDE_PATH)
+	set(CMAKE_REQUIRED_INCLUDES "${ARGP_INCLUDE_PATH}")
+
+	# Find the required argp library. argp may be shipped together with libc (as
+	# glibc does), or as independent library (e.g. for Windows, mac OS, ...). If
+	# the library was found before, the cached result will be used.
+	if (NOT ARGP_LIBRARIES)
+		# First check if argp is shipped together with libc. The required
+		# argp_parse function should be available after linking to libc,
+		# otherwise libc doesn't ship it.
+		check_function_exists("argp_parse" ARGP_IN_LIBC)
+		if (ARGP_IN_LIBC)
+			set(ARGP_LIBRARIES "c" CACHE STRING
+			    "Libraries required for using argp.")
+
+		# argp is not shipped with libc. Try to find the argp library and check
+		# if it has the required argp_parse function.
+		else ()
+			find_library(ARGP_LIBRARIES "argp")
+			if (ARGP_LIBRARIES)
+				set(CMAKE_REQUIRED_LIBRARIES "${ARGP_LIBRARIES}")
+				check_function_exists("argp_parse" ARGP_EXTERNAL)
+				if (NOT ARGP_EXTERNAL)
+					message(FATAL_ERROR "Your system ships an argp library in "
+					        "${ARGP_LIBRARIES}, but it does not have a symbol "
+					        "named argp_parse.")
+				endif ()
+			endif ()
+		endif ()
+	endif ()
+endif ()
+
+
+# Restore the quiet settings. By default the last check should be printed if not
+# disabled in the find_package call.
+set(CMAKE_REQUIRED_QUIET ${argp_FIND_QUIETLY})
+
+
+# Check for all required variables.
+find_package_handle_standard_args(argp
+	DEFAULT_MSG
+	ARGP_LIBRARIES ARGP_INCLUDE_PATH)
+mark_as_advanced(ARGP_LIBRARIES ARGP_INCLUDE_PATH)
